{"version":3,"file":"request.js","sourceRoot":"","sources":["../../../src/request/request.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { setAuthorizationHeader } from \"../auth\";\nimport { Constants, HTTPMethod, jsonStringifyAndEscapeNonASCII, ResourceType } from \"../common\";\nimport { CosmosClientOptions } from \"../CosmosClientOptions\";\nimport { PartitionKeyInternal } from \"../documents\";\nimport { CosmosHeaders } from \"../queryExecutionContext\";\nimport { FeedOptions, RequestOptions } from \"./index\";\nimport { defaultLogger } from \"../common/logger\";\nimport { ChangeFeedMode } from \"../client/ChangeFeed\";\n// ----------------------------------------------------------------------------\n// Utility methods\n//\n\n/** @hidden */\nfunction javaScriptFriendlyJSONStringify(s: unknown): string {\n  // two line terminators (Line separator and Paragraph separator) are not needed to be escaped in JSON\n  // but are needed to be escaped in JavaScript.\n  return JSON.stringify(s)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\");\n}\n\n/** @hidden */\nexport function bodyFromData(data: Buffer | string | Record<string, unknown>): string {\n  if (typeof data === \"object\") {\n    return javaScriptFriendlyJSONStringify(data);\n  }\n  return data;\n}\n\n/**\n * @hidden\n */\ninterface GetHeadersOptions {\n  clientOptions: CosmosClientOptions;\n  defaultHeaders: CosmosHeaders;\n  verb: HTTPMethod;\n  path: string;\n  resourceId: string;\n  resourceType: ResourceType;\n  options: RequestOptions & FeedOptions;\n  partitionKeyRangeId?: string;\n  useMultipleWriteLocations?: boolean;\n  partitionKey?: PartitionKeyInternal;\n}\n\nconst JsonContentType = \"application/json\";\n\n/**\n * @hidden\n */\nexport async function getHeaders({\n  clientOptions,\n  defaultHeaders,\n  verb,\n  path,\n  resourceId,\n  resourceType,\n  options = {},\n  partitionKeyRangeId,\n  useMultipleWriteLocations,\n  partitionKey,\n}: GetHeadersOptions): Promise<CosmosHeaders> {\n  const headers: CosmosHeaders = {\n    [Constants.HttpHeaders.ResponseContinuationTokenLimitInKB]: 1,\n    [Constants.HttpHeaders.EnableCrossPartitionQuery]: true,\n    ...defaultHeaders,\n  };\n\n  if (useMultipleWriteLocations) {\n    headers[Constants.HttpHeaders.ALLOW_MULTIPLE_WRITES] = true;\n  }\n\n  if (options.continuationTokenLimitInKB) {\n    headers[Constants.HttpHeaders.ResponseContinuationTokenLimitInKB] =\n      options.continuationTokenLimitInKB;\n  }\n  if (options.continuationToken) {\n    headers[Constants.HttpHeaders.Continuation] = options.continuationToken;\n  } else if (options.continuation) {\n    headers[Constants.HttpHeaders.Continuation] = options.continuation;\n  }\n\n  if (options.preTriggerInclude) {\n    headers[Constants.HttpHeaders.PreTriggerInclude] =\n      options.preTriggerInclude.constructor === Array\n        ? (options.preTriggerInclude as string[]).join(\",\")\n        : (options.preTriggerInclude as string);\n  }\n\n  if (options.postTriggerInclude) {\n    headers[Constants.HttpHeaders.PostTriggerInclude] =\n      options.postTriggerInclude.constructor === Array\n        ? (options.postTriggerInclude as string[]).join(\",\")\n        : (options.postTriggerInclude as string);\n  }\n\n  if (options.offerType) {\n    headers[Constants.HttpHeaders.OfferType] = options.offerType;\n  }\n\n  if (options.offerThroughput) {\n    headers[Constants.HttpHeaders.OfferThroughput] = options.offerThroughput;\n  }\n\n  if (options.maxItemCount) {\n    headers[Constants.HttpHeaders.PageSize] = options.maxItemCount;\n  }\n\n  if (options.accessCondition) {\n    if (options.accessCondition.type === \"IfMatch\") {\n      headers[Constants.HttpHeaders.IfMatch] = options.accessCondition.condition;\n    } else {\n      headers[Constants.HttpHeaders.IfNoneMatch] = options.accessCondition.condition;\n    }\n  }\n\n  if (options.useAllVersionsAndDeletesFeed) {\n    // headers required for reading feed in allVersionsAndDeletes mode\n    headers[Constants.HttpHeaders.A_IM] = ChangeFeedMode.AllVersionsAndDeletes;\n    headers[Constants.HttpHeaders.ChangeFeedWireFormatVersion] =\n      Constants.AllVersionsAndDeletesChangeFeedWireFormatVersion;\n  }\n\n  if (options.useIncrementalFeed || options.useLatestVersionFeed) {\n    headers[Constants.HttpHeaders.A_IM] = ChangeFeedMode.LatestVersion;\n  }\n\n  if (options.indexingDirective) {\n    headers[Constants.HttpHeaders.IndexingDirective] = options.indexingDirective;\n  }\n\n  if (options.consistencyLevel) {\n    headers[Constants.HttpHeaders.ConsistencyLevel] = options.consistencyLevel;\n  }\n\n  if (options.priorityLevel) {\n    headers[Constants.HttpHeaders.PriorityLevel] = options.priorityLevel;\n  }\n\n  if (options.maxIntegratedCacheStalenessInMs && resourceType === ResourceType.item) {\n    if (typeof options.maxIntegratedCacheStalenessInMs === \"number\") {\n      headers[Constants.HttpHeaders.DedicatedGatewayPerRequestCacheStaleness] =\n        options.maxIntegratedCacheStalenessInMs.toString();\n    } else {\n      defaultLogger.error(\n        `RangeError: maxIntegratedCacheStalenessInMs \"${options.maxIntegratedCacheStalenessInMs}\" is not a valid parameter.`,\n      );\n      headers[Constants.HttpHeaders.DedicatedGatewayPerRequestCacheStaleness] = \"null\";\n    }\n  }\n\n  if (options.bypassIntegratedCache) {\n    headers[Constants.HttpHeaders.DedicatedGatewayPerRequestBypassCache] =\n      options.bypassIntegratedCache.toString();\n  }\n\n  if (options.resourceTokenExpirySeconds) {\n    headers[Constants.HttpHeaders.ResourceTokenExpiry] = options.resourceTokenExpirySeconds;\n  }\n\n  if (options.sessionToken) {\n    headers[Constants.HttpHeaders.SessionToken] = options.sessionToken;\n  }\n\n  if (options.enableScanInQuery) {\n    headers[Constants.HttpHeaders.EnableScanInQuery] = options.enableScanInQuery;\n  }\n\n  if (options.populateQuotaInfo) {\n    headers[Constants.HttpHeaders.PopulateQuotaInfo] = options.populateQuotaInfo;\n  }\n\n  if (options.populateQueryMetrics) {\n    headers[Constants.HttpHeaders.PopulateQueryMetrics] = options.populateQueryMetrics;\n  }\n\n  if (options.maxDegreeOfParallelism !== undefined) {\n    headers[Constants.HttpHeaders.ParallelizeCrossPartitionQuery] = true;\n  }\n\n  if (options.populateQuotaInfo) {\n    headers[Constants.HttpHeaders.PopulateQuotaInfo] = true;\n  }\n\n  if (partitionKey !== undefined && !headers[Constants.HttpHeaders.PartitionKey]) {\n    headers[Constants.HttpHeaders.PartitionKey] = jsonStringifyAndEscapeNonASCII(partitionKey);\n  }\n\n  if (clientOptions.key || clientOptions.tokenProvider) {\n    headers[Constants.HttpHeaders.XDate] = new Date().toUTCString();\n  }\n\n  if (verb === HTTPMethod.post || verb === HTTPMethod.put) {\n    if (!headers[Constants.HttpHeaders.ContentType]) {\n      headers[Constants.HttpHeaders.ContentType] = JsonContentType;\n    }\n  }\n\n  if (!headers[Constants.HttpHeaders.Accept]) {\n    headers[Constants.HttpHeaders.Accept] = JsonContentType;\n  }\n\n  if (partitionKeyRangeId !== undefined) {\n    headers[Constants.HttpHeaders.PartitionKeyRangeID] = partitionKeyRangeId;\n  }\n\n  if (options.enableScriptLogging) {\n    headers[Constants.HttpHeaders.EnableScriptLogging] = options.enableScriptLogging;\n  }\n\n  if (options.disableRUPerMinuteUsage) {\n    headers[Constants.HttpHeaders.DisableRUPerMinuteUsage] = true;\n  }\n\n  if (options.populateIndexMetrics) {\n    headers[Constants.HttpHeaders.PopulateIndexMetrics] = options.populateIndexMetrics;\n  }\n\n  if (\n    clientOptions.key ||\n    clientOptions.resourceTokens ||\n    clientOptions.tokenProvider ||\n    clientOptions.permissionFeed\n  ) {\n    await setAuthorizationHeader(clientOptions, verb, path, resourceId, resourceType, headers);\n  }\n  return headers;\n}\n"]}